/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import logica.ControladorInterfaces;
import logica.Almacen;
import logica.Pedido;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;


/**
 *
 * @author elias, Javiera Méndez
 */
public class ReporteVentas extends javax.swing.JFrame {
    private Almacen almacen;
    /**
     * Creates new form PaginaPrincipalFX
     */
    public ReporteVentas() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void setAlmacen(Almacen almacen) 
    {
        this.almacen = almacen;
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSelecPeriodo = new javax.swing.JLabel();
        bVolver = new javax.swing.JButton();
        bGenerar = new javax.swing.JButton();
        txtSeleccione = new javax.swing.JLabel();
        anoConsulta = new javax.swing.JTextField();
        periodo = new javax.swing.JComboBox<>();
        seleccionPeriodo = new javax.swing.JComboBox<>();
        txtIngresAno = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        panelSuperior = new javax.swing.JPanel();
        icon = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSelecPeriodo.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtSelecPeriodo.setText("Seleccione periodo:");
        getContentPane().add(txtSelecPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 20));

        bVolver.setText("Volver");
        bVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVolverActionPerformed(evt);
            }
        });
        getContentPane().add(bVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 100, 50));

        bGenerar.setText("Generar");
        bGenerar.setToolTipText("Generar Gráfico");
        bGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerarActionPerformed(evt);
            }
        });
        getContentPane().add(bGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 370, 100, 50));
        bGenerar.getAccessibleContext().setAccessibleDescription("Gnerar Gráfico");

        txtSeleccione.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtSeleccione.setText("Seleccione mes:");
        getContentPane().add(txtSeleccione, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, 20));

        anoConsulta.setToolTipText("Ingrese número telefónico");
        getContentPane().add(anoConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 100, -1));

        periodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mensual", "Semestral", "Anual" }));
        periodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                periodoActionPerformed(evt);
            }
        });
        getContentPane().add(periodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 110, -1));

        seleccionPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        getContentPane().add(seleccionPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 110, -1));

        txtIngresAno.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtIngresAno.setText("Ingrese año:");
        getContentPane().add(txtIngresAno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, 20));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 490, 240));

        panelSuperior.setBackground(new java.awt.Color(153, 197, 175));

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/logo64x64.png"))); // NOI18N

        titulo.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setText("REPORTES VENTAS");

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(icon)
                .addGap(18, 18, 18)
                .addComponent(titulo)
                .addContainerGap(433, Short.MAX_VALUE))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(icon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSuperiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titulo)
                .addGap(18, 18, 18))
        );

        getContentPane().add(panelSuperior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 70));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/fondoLargo.jpg"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 780, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVolverActionPerformed
        ControladorInterfaces.mostrarReporteVentas(false);
        ControladorInterfaces.mostrarPrincipal(true);
    }//GEN-LAST:event_bVolverActionPerformed

    private void bGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerarActionPerformed
        //Acá se crea la gráfica (datos estáticos en la gráfica y se añaden los datos para cada barra al agregar datosGrafica)
        //JFreeChart grafica = null;
        boolean flag1 = true;
        if(anoConsulta.getText().equals("") || anoConsulta.getText()==null){
            flag1 = false;
            JOptionPane.showMessageDialog(this, "Debe ingresar un año.","Error", 
                JOptionPane.ERROR_MESSAGE);
        }
        String seleccion = periodo.getSelectedItem().toString();
        if(flag1){
            switch(seleccion)
            {
                case "Anual":
                    //grafica = ChartFactory.createBarChart("Ventas "+anoConsulta.getText() , "Mes", "Pesos Chilenos", datosGrafica);
                    ventasAnuales();
                    break;
                case "Mensual":
                    //grafica = ChartFactory.createBarChart("Ventas "+anoConsulta.getText()+ " "+seleccionPeriodo.getItemAt(seleccionPeriodo.getSelectedIndex()) , "Mes", "Pesos Chilenos", datosGrafica);
                    int mes = seleccionPeriodo.getSelectedIndex();
                    ventasMensuales(mes);
                    break;
                case "Semestral":
                    //grafica = ChartFactory.createBarChart("Ventas "+anoConsulta.getText()+ " "+seleccionPeriodo.getItemAt(seleccionPeriodo.getSelectedIndex()) , "Mes", "Pesos Chilenos", datosGrafica);
                    ventasSemestrales();
                    break;
            }
        }
        
        //ChartPanel panelGrafica = new ChartPanel(grafica);
        //jPanel1.add(panelGrafica);
        
        //Acá se indica la posición y el tamaño de la gráfica dentro del JPanel
        //panelGrafica.setBounds(5, 5, 480, 230);                           
    }//GEN-LAST:event_bGenerarActionPerformed

    private void ventasAnuales()
    {
        //Enero = 0, Febrero = 1, ... Diciembre = 11;
        ArrayList<Pedido> pedidos = almacen.getPedidos();
        //Primero busca según el año y luego ve si el estado es "retirado"
        int enero = 0, febrero = 0, marzo = 0, abril = 0, mayo = 0, junio = 0,
            julio = 0, agosto = 0, septiembre = 0, octubre = 0, noviembre = 0, diciembre = 0;
        String anoConsulta1 = anoConsulta.getText();
        //System.out.println("año1 "+anoConsulta1);
        int anoOficial = Integer.parseInt(anoConsulta1);
        //System.out.println("año2 "+anoOficial);
        for(int i = 0; i < pedidos.size(); i++)
        {
            Pedido p = pedidos.get(i);
            Date fecha = p.getFechaRetiro();
            int mes = fecha.getMonth();
            int anoPedido = fecha.getYear()+1900;
            //System.out.println("año pedido: "+anoPedido);
            if((anoOficial == anoPedido) && (p.getEstado().equals("Retirado")))
            {  
                switch (mes) 
                {
                    case 0:
                        enero += p.getPrecioTotal();
                        break;
                    case 1:
                        febrero += p.getPrecioTotal();
                        break;
                    case 2:
                        marzo += p.getPrecioTotal();
                        break;
                    case 3:
                        abril += p.getPrecioTotal();
                        break;
                    case 4:
                        mayo += p.getPrecioTotal();
                        break;
                    case 5:
                        junio += p.getPrecioTotal();
                        break;
                    case 6:
                        julio += p.getPrecioTotal();
                        break;
                    case 7:
                        agosto += p.getPrecioTotal();
                        break;
                    case 8:
                        septiembre += p.getPrecioTotal();
                        break;
                    case 9:
                        octubre += p.getPrecioTotal();
                        break;
                    case 10:
                        noviembre += p.getPrecioTotal();
                        break;
                    case 11:
                        diciembre += p.getPrecioTotal();
                        break;
                    default:
                        break;
                }  
            }  
        }     
        DefaultCategoryDataset datosGrafica = new DefaultCategoryDataset();
        
        datosGrafica.setValue(enero, "Enero", "");
        datosGrafica.setValue(febrero, "Febrero", "");
        datosGrafica.setValue(marzo, "Marzo", "");
        datosGrafica.setValue(abril, "Abril", "");
        datosGrafica.setValue(mayo, "Mayo", "");
        datosGrafica.setValue(junio, "Junio", "");
        datosGrafica.setValue(julio, "Julio", "");
        datosGrafica.setValue(agosto, "Agosto", "");
        datosGrafica.setValue(septiembre, "Septiembre", "");
        datosGrafica.setValue(octubre, "Octubre", "");
        datosGrafica.setValue(noviembre, "Noviembre", "");
        datosGrafica.setValue(diciembre, "Diciembre", "");
 
        JFreeChart grafica = ChartFactory.createBarChart("Ventas "+anoConsulta.getText() , "Mes", "Pesos Chilenos", datosGrafica);
        ChartPanel panelGrafica = new ChartPanel(grafica);
        jPanel1.add(panelGrafica);
        panelGrafica.setBounds(5, 5, 480, 230);
    }
    
    private void ventasMensuales(int mesOficial)
    {
        //Enero = 0, Febrero = 1, ... Diciembre = 11;
        ArrayList<Pedido> pedidos = almacen.getPedidos();
        //Primero busca según el año y luego ve si el estado es "retirado"
        int ventaMensual = 0;
        String anoConsulta1 = anoConsulta.getText();
        //System.out.println("año1 "+anoConsulta1);
        int anoOficial = Integer.parseInt(anoConsulta1);
        //System.out.println("año2 "+anoOficial);
        for(int i = 0; i < pedidos.size(); i++)
        {
            Pedido p = pedidos.get(i);
            Date fecha = p.getFechaRetiro();
            int mesPedido = fecha.getMonth();
            int anoPedido = fecha.getYear()+1900;
            //System.out.println("año pedido: "+anoPedido);
            if((anoOficial == anoPedido) && (mesOficial == mesPedido) && (p.getEstado().equals("Retirado")))
            {  
                ventaMensual +=  p.getPrecioTotal();
            }  
        }            

        DefaultCategoryDataset datosGrafica = new DefaultCategoryDataset();
        
        datosGrafica.setValue(ventaMensual, seleccionPeriodo.getItemAt(seleccionPeriodo.getSelectedIndex()), "");
 
        JFreeChart grafica = ChartFactory.createBarChart("Ventas "+anoConsulta.getText()+ " "+seleccionPeriodo.getItemAt(seleccionPeriodo.getSelectedIndex()) , "Mes", "Pesos Chilenos", datosGrafica);
        ChartPanel panelGrafica = new ChartPanel(grafica);
        jPanel1.add(panelGrafica);
        panelGrafica.setBounds(5, 5, 480, 230);
    }
    
    private void ventasSemestrales()
    {
        ArrayList<Pedido> pedidos = almacen.getPedidos();

        int enero = 0, febrero = 0, marzo = 0, abril = 0, mayo = 0, junio = 0,
            julio = 0, agosto = 0, septiembre = 0, octubre = 0, noviembre = 0, diciembre = 0;
        String anoConsulta1 = anoConsulta.getText();
        int anoOficial = Integer.parseInt(anoConsulta1);

        for(int i = 0; i < pedidos.size(); i++)
        {
            Pedido p = pedidos.get(i);
            Date fecha = p.getFechaRetiro();
            int mes = fecha.getMonth();
            int anoPedido = fecha.getYear()+1900;

            if((anoOficial == anoPedido) && (p.getEstado().equals("Retirado")))
            {  
                switch (mes) 
                {
                    case 0:
                        enero += p.getPrecioTotal();
                        break;
                    case 1:
                        febrero += p.getPrecioTotal();
                        break;
                    case 2:
                        marzo += p.getPrecioTotal();
                        break;
                    case 3:
                        abril += p.getPrecioTotal();
                        break;
                    case 4:
                        mayo += p.getPrecioTotal();
                        break;
                    case 5:
                        junio += p.getPrecioTotal();
                        break;
                    case 6:
                        julio += p.getPrecioTotal();
                        break;
                    case 7:
                        agosto += p.getPrecioTotal();
                        break;
                    case 8:
                        septiembre += p.getPrecioTotal();
                        break;
                    case 9:
                        octubre += p.getPrecioTotal();
                        break;
                    case 10:
                        noviembre += p.getPrecioTotal();
                        break;
                    case 11:
                        diciembre += p.getPrecioTotal();
                        break;
                    default:
                        break;
                }  
            }  
        }     
        
        DefaultCategoryDataset datosGrafica = new DefaultCategoryDataset();
        if(seleccionPeriodo.getSelectedIndex() == 0)
        {
            datosGrafica.setValue(enero, "Enero", "");
            datosGrafica.setValue(febrero, "Febrero", "");
            datosGrafica.setValue(marzo, "Marzo", "");
            datosGrafica.setValue(abril, "Abril", "");
            datosGrafica.setValue(mayo, "Mayo", "");
            datosGrafica.setValue(junio, "Junio", "");
        }
        else if(seleccionPeriodo.getSelectedIndex() == 1)
        {
            datosGrafica.setValue(julio, "Julio", "");
            datosGrafica.setValue(agosto, "Agosto", "");
            datosGrafica.setValue(septiembre, "Septiembre", "");
            datosGrafica.setValue(octubre, "Octubre", "");
            datosGrafica.setValue(noviembre, "Noviembre", "");
            datosGrafica.setValue(diciembre, "Diciembre", "");
        }
 
        JFreeChart grafica = ChartFactory.createBarChart("Ventas "+anoConsulta.getText()+ " "+seleccionPeriodo.getItemAt(seleccionPeriodo.getSelectedIndex()) , "Mes", "Pesos Chilenos", datosGrafica);
        ChartPanel panelGrafica = new ChartPanel(grafica);
        jPanel1.add(panelGrafica);
        panelGrafica.setBounds(5, 5, 480, 230);
    }

    
    private void periodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_periodoActionPerformed
        // TODO add your handling code here:
        String seleccion = periodo.getSelectedItem().toString();
        switch(seleccion){
            case "Anual":
                txtSeleccione.setVisible(false);
                seleccionPeriodo.setVisible(false);
                break;
            case "Mensual":
                txtSeleccione.setVisible(true);
                txtSeleccione.setText("Seleccione mes");
                seleccionPeriodo.setVisible(true);
                seleccionPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
                break;
            case "Semestral":
                txtSeleccione.setVisible(true);
                txtSeleccione.setText("Seleccione semestre");
                seleccionPeriodo.setVisible(true);
                seleccionPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Primer Semestre", "Segundo Semestre" }));
                break;
        }
        repaint();
    }//GEN-LAST:event_periodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReporteVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReporteVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReporteVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReporteVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReporteVentas().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField anoConsulta;
    private javax.swing.JButton bGenerar;
    private javax.swing.JButton bVolver;
    private javax.swing.JLabel background;
    private javax.swing.JLabel icon;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JComboBox<String> periodo;
    private javax.swing.JComboBox<String> seleccionPeriodo;
    private javax.swing.JLabel titulo;
    private javax.swing.JLabel txtIngresAno;
    private javax.swing.JLabel txtSelecPeriodo;
    private javax.swing.JLabel txtSeleccione;
    // End of variables declaration//GEN-END:variables
}
